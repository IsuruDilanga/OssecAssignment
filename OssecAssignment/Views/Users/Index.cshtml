@model OssecAssignment.Models.User
@{
    ViewData["Title"] = "Index";
    var users = ViewBag.Users as IEnumerable<OssecAssignment.Models.User>;
    var email = TempData["Email"]?.ToString();
    var isAuthenticated = TempData["Authenticated"]?.ToString();
}

<h1>Login User</h1>
<div class="row">
    <div class="col-md-6">
        <form asp-action="Login" method="post">
            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" aria-describedby="emailHelp" placeholder="Enter email">
                <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" type="password" placeholder="Password">
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>

<p>
    <a asp-action="Create">New User Register</a>
</p>

<script>
    // Check if authentication status is set and set local storage accordingly
    var isAuthenticated = '@isAuthenticated';
    var email = '@email';

    @*localStorage.setItem('email', email);

    console.log("email: ", email);
    if (email != null && email != '') {
        localStorage.setItem('authenticatesxd', 'true');
        }*@

    
    
    if (isAuthenticated === 'True') {
        localStorage.setItem('email', email);
        localStorage.setItem('authenticated', 'true');
    } else {
        localStorage.removeItem('Email');
        localStorage.removeItem('Authenticated');
    }
    
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
